name: CI/CD Pipeline

env:
 IMAGE_NAME: emogi-app
 CONTAINER_NAME: emogi-app

on:
 push:
   branches: ["main", "develop"]

jobs:
 build-and-push:
   runs-on: ubuntu-latest
   steps:
     - name: Checkout code
       uses: actions/checkout@v4

     - name: Get version
       id: version
       run: |
         BASE_VERSION=$(cat pyproject.toml | grep version | head -n 1 | cut -d'"' -f2)
         if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
           echo "version=${BASE_VERSION}" >> $GITHUB_OUTPUT
         else
           echo "version=${BASE_VERSION}-dev.${GITHUB_RUN_NUMBER}" >> $GITHUB_OUTPUT
         fi

     - name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v3

     - name: Login to DockerHub
       uses: docker/login-action@v3.3.0
       with:
         username: ${{ secrets.DOCKER_USERNAME }}
         password: ${{ secrets.DOCKER_PASSWORD }}

     - name: Build and push Docker image
       uses: docker/build-push-action@v6.7.0
       with:
         context: .
         file: ./Dockerfile
         push: true
         tags: |
           ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}
           ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest

      - name: Discord notification
        if: always()  # 성공/실패 상관없이 항상 실행
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        uses: Ilshidur/action-discord@master
        with:
          args: |
            🚀 **${{ github.repository }}** 배포 결과
            
            브랜치: `${{ github.ref_name }}`
            버전: `${{ steps.version.outputs.version }}`
            커밋: ${{ github.event.head_commit.message }}
            
            상태: ${{ job.status }}
            
            자세히 보기: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}