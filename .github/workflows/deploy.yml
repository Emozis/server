name: CI/CD Pipeline

env:
    IMAGE_NAME: emogi-app
    CONTAINER_NAME: emogi-app
    PROJECT_PATH: /home/isakin/project/emogi

on:
    push:
        branches: ["main", "develop"]

jobs:
    build-and-push:
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.version.outputs.version }}
        steps:
          - name: Checkout code
            uses: actions/checkout@v4

          - name: Get version
            id: version
            run: |
                BASE_VERSION=$(cat pyproject.toml | grep version | head -n 1 | cut -d'"' -f2)
                if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
                    echo "version=${BASE_VERSION}" >> $GITHUB_OUTPUT
                else
                    echo "version=${BASE_VERSION}-dev.${GITHUB_RUN_NUMBER}" >> $GITHUB_OUTPUT
                fi

          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v3

          - name: Login to DockerHub
            uses: docker/login-action@v3.3.0
            with:
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_PASSWORD }}

          - name: Build and push Docker image
            uses: docker/build-push-action@v6.7.0
            with:
                context: .
                file: ./Dockerfile
                push: true
                tags: |
                    ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}
                    ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest

    deploy-to-server:
        needs: build-and-push
        runs-on: ubuntu-latest
        steps:
          - name: Checkout code
            uses: actions/checkout@v4

          - name: Deploy to server
            uses: appleboy/ssh-action@master
            with:
                host: ${{ secrets.SSH_HOST }}
                port: ${{ secrets.SSH_PORT }}
                username: ${{ secrets.SSH_USERNAME }}
                password: ${{ secrets.SSH_PASSWORD }}
                script: |
                    # Create project directory if it doesn't exist
                    mkdir -p /home/isakin/project/emogi

          - name: Copy docker-compose file  # docker-compose ÌååÏùº Î≥µÏÇ¨
            uses: appleboy/scp-action@master
            with:
                host: ${{ secrets.SSH_HOST }}
                port: ${{ secrets.SSH_PORT }}
                username: ${{ secrets.SSH_USERNAME }}
                password: ${{ secrets.SSH_PASSWORD }}
                source: "docker-compose.yml"
                target: "/home/isakin/project/emogi"

          - name: Update and restart containers
            uses: appleboy/ssh-action@master
            with:
                host: ${{ secrets.SSH_HOST }}
                port: ${{ secrets.SSH_PORT }}
                username: ${{ secrets.SSH_USERNAME }}
                password: ${{ secrets.SSH_PASSWORD }}
                script: |
                    cd ${{ env.PROJECT_PATH }}

                    # Update image tag in docker-compose.yml
                    sed -i "s|image: ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:.*|image: ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ needs.build-and-push.outputs.version }}|" docker-compose.yml
                    
                    # Pull and restart containers
                    docker compose pull
                    docker compose up -d
                    
                    # Clean up unused Docker images
                    docker image prune -af

    notify:
        needs: [build-and-push, deploy-to-server]
        runs-on: ubuntu-latest
        if: always()
        steps:
          - name: Discord notification
            env:
                DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
                DISCORD_EMBEDS: |
                    [{
                        "title": "üöÄ ${{ github.repository }} Î∞∞Ìè¨ Í≤∞Í≥º",
                        "description": "GitHub Actions ÏõåÌÅ¨ÌîåÎ°úÏö∞ Ïã§Ìñâ Í≤∞Í≥º",
                        "color": "${{ needs.build-and-push.result == 'success' && needs.deploy-to-server.result == 'success' && '5763719' || '15548997' }}",
                        "fields": [
                            {
                                "name": "Ï†ÄÏû•ÏÜå",
                                "value": "${{ github.repository }}",
                                "inline": true
                            },
                            {
                                "name": "Î∏åÎûúÏπò",
                                "value": "`${{ github.ref_name }}`",
                                "inline": true
                            },
                            {
                                "name": "Î≤ÑÏ†Ñ",
                                "value": "`${{ needs.build-and-push.outputs.version }}`",
                                "inline": true
                            },
                            {
                                "name": "Ïª§Î∞ã Î©îÏãúÏßÄ",
                                "value": "${{ github.event.head_commit.message }}"
                            },
                            {
                                "name": "ÎπåÎìú ÏÉÅÌÉú",
                                "value": "${{ needs.build-and-push.result == 'success' && '‚úÖ ÏÑ±Í≥µ' || '‚ùå Ïã§Ìå®' }}"
                            },
                            {
                                "name": "Î∞∞Ìè¨ ÏÉÅÌÉú",
                                "value": "${{ needs.deploy-to-server.result == 'success' && '‚úÖ ÏÑ±Í≥µ' || '‚ùå Ïã§Ìå®' }}"
                            }
                        ],
                        "footer": {
                            "text": "GitHub Actions"
                        },
                        "timestamp": "${{ github.event.head_commit.timestamp }}"
                    }]
            uses: Ilshidur/action-discord@master